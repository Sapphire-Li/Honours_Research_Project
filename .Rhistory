w <- seq(from = 0, to = 1, by = 0.01)
pool <- numeric(length(w)) |> as.numeric()
weight <- numeric(4+3+2+1) |> as.numeric()
LS_comb <- numeric(4+3+2+1) |> as.numeric()
# LS_comb <- matrix(0, nrow = 5, ncol = 5)
# LS_comb[1,1] <- LS_1
# LS_comb[2,2] <- LS_2
# LS_comb[3,3] <- LS_3
# LS_comb[4,4] <- LS_4
# LS_comb[5,5] <- LS_5
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_1 + (1-w[j])*pd_2))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[1] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[1] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[1,2] <- LS
# LS_comb[2,1] <- LS
p1 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ARIMA(1,1,1) and ETS(M,N,N)",
x = "Weight on model ARIMA(1,1,1)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 8),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[1], y = LS_comb[1],
label = paste0("Max: ", round(LS_comb[1],4)), vjust = 2, size = 3) +
annotate("text", x = weight[1], y = LS_comb[1],
label = paste0("Weight: ", round(weight[1],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[1], y = LS_comb[1]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_1 + (1-w[j])*pd_3))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[2] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[2] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[1,3] <- LS
# LS_comb[3,1] <- LS
p2 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ARIMA(1,1,1) and ETS(M,A,N)",
x = "Weight on model ARIMA(1,1,1)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 8),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[2], y = LS_comb[2],
label = paste0("Max: ", round(LS_comb[2],4)), vjust = 2, size = 3) +
annotate("text", x = weight[2], y = LS_comb[2],
label = paste0("Weight: ", round(weight[2],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[2], y = LS_comb[2]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_1 + (1-w[j])*pd_4))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[3] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[3] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[1,4] <- LS
# LS_comb[4,1] <- LS
p3 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ARIMA(1,1,1) and LM (linear)",
x = "Weight on model ARIMA(1,1,1)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 8),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[3], y = LS_comb[3],
label = paste0("Max: ", round(LS_comb[3],4)), vjust = 2, size = 3) +
annotate("text", x = weight[3], y = LS_comb[3],
label = paste0("Weight: ", round(weight[3],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[3], y = LS_comb[3]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_1 + (1-w[j])*pd_5))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[4] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[4] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[1,5] <- LS
# LS_comb[5,1] <- LS
p4 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ARIMA(1,1,1) and LM (log)",
x = "Weight on model ARIMA(1,1,1)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 8),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[4], y = LS_comb[4],
label = paste0("Max: ", round(LS_comb[4],4)), vjust = 2, size = 3) +
annotate("text", x = weight[4], y = LS_comb[4],
label = paste0("Weight: ", round(weight[4],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[4], y = LS_comb[4]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_2 + (1-w[j])*pd_3))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[5] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[5] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[2,3] <- LS
# LS_comb[3,2] <- LS
p5 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ETS(M,N,N) and ETS(M,A,N)",
x = "Weight on model ETS(M,N,N)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 8),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[5], y = LS_comb[5],
label = paste0("Max: ", round(LS_comb[5],4)), vjust = 2, size = 3) +
annotate("text", x = weight[5], y = LS_comb[5],
label = paste0("Weight: ", round(weight[5],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[5], y = LS_comb[5]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_2 + (1-w[j])*pd_4))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[6] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[6] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[2,4] <- LS
# LS_comb[4,2] <- LS
p6 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ETS(M,N,N) and LM (linear)",
x = "Weight on model ETS(M,N,N)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 8),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[6], y = LS_comb[6],
label = paste0("Max: ", round(LS_comb[6],4)), vjust = 2, size = 3) +
annotate("text", x = weight[6], y = LS_comb[6],
label = paste0("Weight: ", round(weight[6],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[6], y = LS_comb[6]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_2 + (1-w[j])*pd_5))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[7] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[7] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[2,5] <- LS
# LS_comb[5,2] <- LS
p7 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ETS(M,N,N) and LM (log)",
x = "Weight on model ETS(M,N,N)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 8),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[7], y = LS_comb[7],
label = paste0("Max: ", round(LS_comb[7],4)), vjust = 2, size = 3) +
annotate("text", x = weight[7], y = LS_comb[7],
label = paste0("Weight: ", round(weight[7],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[7], y = LS_comb[7]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_3 + (1-w[j])*pd_4))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[8] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[8] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[3,4] <- LS
# LS_comb[4,3] <- LS
p8 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ETS(M,A,N) and LM (linear)",
x = "Weight on model ETS(M,A,N)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 8),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[8], y = LS_comb[8],
label = paste0("Max: ", round(LS_comb[8],4)), vjust = 2, size = 3) +
annotate("text", x = weight[8], y = LS_comb[8],
label = paste0("Weight: ", round(weight[8],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[8], y = LS_comb[8]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_3 + (1-w[j])*pd_5))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[9] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[9] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[3,5] <- LS
# LS_comb[5,3] <- LS
p9 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ETS(M,A,N) and LM (log)",
x = "Weight on model ETS(M,A,N)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 8),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[9], y = LS_comb[9],
label = paste0("Max: ", round(LS_comb[9],4)), vjust = 2, size = 3) +
annotate("text", x = weight[9], y = LS_comb[9],
label = paste0("Weight: ", round(weight[9],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[9], y = LS_comb[9]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_4 + (1-w[j])*pd_5))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[10] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[10] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[4,5] <- LS
# LS_comb[5,4] <- LS
p10 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "LM (linear) and LM (log)",
x = "Weight on model LM (linear)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 8),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[10], y = LS_comb[10],
label = paste0("Max: ", round(LS_comb[10],4)), vjust = 2, size = 3) +
annotate("text", x = weight[10], y = LS_comb[10],
label = paste0("Weight: ", round(weight[10],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[10], y = LS_comb[10]), size = 3, color = "orange")
Name <- c(12,13,14,15,23,24,25,34,35,45)
set <- cbind(Name, weight, LS_comb) |> as_tibble()
set |> arrange(-LS_comb) |> head(4)
p1 <- p1 + scale_y_continuous(limits = c(-5.872, -5.79))
p2 <- p2 + scale_y_continuous(limits = c(-5.872, -5.79))
p7 <- p7 + scale_y_continuous(limits = c(-5.872, -5.79))
p9 <- p9 + scale_y_continuous(limits = c(-5.872, -5.79))
library(gridExtra)
grid.arrange(p1,p2,p7,p9,ncol = 2)
pdf("best4.pdf", width = 7, height = 5)
grid.arrange(p1,p2,p7,p9,ncol = 2)
dev.off()
w <- seq(from = 0, to = 1, by = 0.01)
pool <- numeric(length(w)) |> as.numeric()
weight <- numeric(4+3+2+1) |> as.numeric()
LS_comb <- numeric(4+3+2+1) |> as.numeric()
# LS_comb <- matrix(0, nrow = 5, ncol = 5)
# LS_comb[1,1] <- LS_1
# LS_comb[2,2] <- LS_2
# LS_comb[3,3] <- LS_3
# LS_comb[4,4] <- LS_4
# LS_comb[5,5] <- LS_5
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_1 + (1-w[j])*pd_2))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[1] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[1] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[1,2] <- LS
# LS_comb[2,1] <- LS
p1 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ARIMA(1,1,1) and ETS(M,N,N)",
x = "Weight on model ARIMA(1,1,1)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 9),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[1], y = LS_comb[1],
label = paste0("Max: ", round(LS_comb[1],4)), vjust = 2, size = 3) +
annotate("text", x = weight[1], y = LS_comb[1],
label = paste0("Weight: ", round(weight[1],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[1], y = LS_comb[1]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_1 + (1-w[j])*pd_3))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[2] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[2] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[1,3] <- LS
# LS_comb[3,1] <- LS
p2 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ARIMA(1,1,1) and ETS(M,A,N)",
x = "Weight on model ARIMA(1,1,1)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 9),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[2], y = LS_comb[2],
label = paste0("Max: ", round(LS_comb[2],4)), vjust = 2, size = 3) +
annotate("text", x = weight[2], y = LS_comb[2],
label = paste0("Weight: ", round(weight[2],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[2], y = LS_comb[2]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_1 + (1-w[j])*pd_4))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[3] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[3] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[1,4] <- LS
# LS_comb[4,1] <- LS
p3 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ARIMA(1,1,1) and LM (linear)",
x = "Weight on model ARIMA(1,1,1)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 9),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[3], y = LS_comb[3],
label = paste0("Max: ", round(LS_comb[3],4)), vjust = 2, size = 3) +
annotate("text", x = weight[3], y = LS_comb[3],
label = paste0("Weight: ", round(weight[3],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[3], y = LS_comb[3]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_1 + (1-w[j])*pd_5))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[4] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[4] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[1,5] <- LS
# LS_comb[5,1] <- LS
p4 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ARIMA(1,1,1) and LM (log)",
x = "Weight on model ARIMA(1,1,1)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 9),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[4], y = LS_comb[4],
label = paste0("Max: ", round(LS_comb[4],4)), vjust = 2, size = 3) +
annotate("text", x = weight[4], y = LS_comb[4],
label = paste0("Weight: ", round(weight[4],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[4], y = LS_comb[4]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_2 + (1-w[j])*pd_3))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[5] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[5] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[2,3] <- LS
# LS_comb[3,2] <- LS
p5 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ETS(M,N,N) and ETS(M,A,N)",
x = "Weight on model ETS(M,N,N)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 9),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[5], y = LS_comb[5],
label = paste0("Max: ", round(LS_comb[5],4)), vjust = 2, size = 3) +
annotate("text", x = weight[5], y = LS_comb[5],
label = paste0("Weight: ", round(weight[5],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[5], y = LS_comb[5]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_2 + (1-w[j])*pd_4))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[6] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[6] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[2,4] <- LS
# LS_comb[4,2] <- LS
p6 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ETS(M,N,N) and LM (linear)",
x = "Weight on model ETS(M,N,N)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 9),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[6], y = LS_comb[6],
label = paste0("Max: ", round(LS_comb[6],4)), vjust = 2, size = 3) +
annotate("text", x = weight[6], y = LS_comb[6],
label = paste0("Weight: ", round(weight[6],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[6], y = LS_comb[6]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_2 + (1-w[j])*pd_5))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[7] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[7] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[2,5] <- LS
# LS_comb[5,2] <- LS
p7 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ETS(M,N,N) and LM (log)",
x = "Weight on model ETS(M,N,N)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 9),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[7], y = LS_comb[7],
label = paste0("Max: ", round(LS_comb[7],4)), vjust = 2, size = 3) +
annotate("text", x = weight[7], y = LS_comb[7],
label = paste0("Weight: ", round(weight[7],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[7], y = LS_comb[7]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_3 + (1-w[j])*pd_4))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[8] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[8] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[3,4] <- LS
# LS_comb[4,3] <- LS
p8 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ETS(M,A,N) and LM (linear)",
x = "Weight on model ETS(M,A,N)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 9),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[8], y = LS_comb[8],
label = paste0("Max: ", round(LS_comb[8],4)), vjust = 2, size = 3) +
annotate("text", x = weight[8], y = LS_comb[8],
label = paste0("Weight: ", round(weight[8],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[8], y = LS_comb[8]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_3 + (1-w[j])*pd_5))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[9] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[9] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[3,5] <- LS
# LS_comb[5,3] <- LS
p9 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "ETS(M,A,N) and LM (log)",
x = "Weight on model ETS(M,A,N)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 9),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[9], y = LS_comb[9],
label = paste0("Max: ", round(LS_comb[9],4)), vjust = 2, size = 3) +
annotate("text", x = weight[9], y = LS_comb[9],
label = paste0("Weight: ", round(weight[9],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[9], y = LS_comb[9]), size = 3, color = "orange")
for (j in 1:length(w)) {
pool[j] <-  sum(log(w[j]*pd_4 + (1-w[j])*pd_5))/P
}
comb <- cbind(w,pool) |> as_tibble()
comb |> filter(pool == max(comb$pool))
weight[10] <- comb |> filter(pool == max(comb$pool)) |> select(w) |> as.numeric()
LS_comb[10] <- comb |> filter(pool == max(comb$pool)) |> select(pool) |> as.numeric()
# LS_comb[4,5] <- LS
# LS_comb[5,4] <- LS
p10 <- comb |> ggplot(aes(w, pool)) +
geom_line(color = "red") +
labs(title = "LM (linear) and LM (log)",
x = "Weight on model LM (linear)",
y = "Average log predictive socre") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
title = element_text(size = 9),
axis.text = element_text(size = 6)) +
annotate("text", x = weight[10], y = LS_comb[10],
label = paste0("Max: ", round(LS_comb[10],4)), vjust = 2, size = 3) +
annotate("text", x = weight[10], y = LS_comb[10],
label = paste0("Weight: ", round(weight[10],4)), vjust = 4, size = 3) +
geom_point(aes(x = weight[10], y = LS_comb[10]), size = 3, color = "orange")
Name <- c(12,13,14,15,23,24,25,34,35,45)
set <- cbind(Name, weight, LS_comb) |> as_tibble()
set |> arrange(-LS_comb) |> head(4)
p1 <- p1 + scale_y_continuous(limits = c(-5.872, -5.79))
p2 <- p2 + scale_y_continuous(limits = c(-5.872, -5.79))
p7 <- p7 + scale_y_continuous(limits = c(-5.872, -5.79))
p9 <- p9 + scale_y_continuous(limits = c(-5.872, -5.79))
library(gridExtra)
grid.arrange(p1,p2,p7,p9,ncol = 2)
pdf("best4.pdf", width = 7, height = 5)
grid.arrange(p1,p2,p7,p9,ncol = 2)
dev.off()
set
set$LS_comb
set |> arrange(-LS_comb) |> head(4)
set |> arrange(-LS_comb) |> head(4) |> LS_comb
set |> arrange(-LS_comb) |> head(4) |> select(LS_comb)
best4 <- set |> arrange(-LS_comb) |> head(4)
best4$LS_comb
set$weight
